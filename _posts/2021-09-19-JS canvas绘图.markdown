---
layout:     post
title:      "JS基础"
subtitle:   "canvas绘图"
date:       2021-9-19
author:     "Lyb"
header-img: "img/post-bg-unix-linux.jpg"
tags:
    - 前端开发
    - JavaScript
---

## 基础方法
````
1.创建canvas画布，设置id,设置画布宽高

  <canvas id="drawing" width="100" height="100></canvas>

2.根据id获取到画布dom元素对象

  let drawing = document.getElementById('drawing')

3.确定浏览器支持canvas并设置图像上下文（2d为例）
  if(drawing.getContext){
    let context = drawingg.getCoontext("2d")
  }
4.根据不同的方法绘制不同的图像:
````
       1.绘制实心矩形
         context.fillStyle = "#ff0000" //红色填充背景
         context.fillRect(30,30,100,100) //4个参数分别代表 x坐标，y坐标，矩形的宽，高

       2.绘制边框矩形 
        context.strokeStyle = "red" //红色边框
        context.strokeRect(30,30,200,200)//4个参数分别代表 x坐标，y坐标，矩形的宽，高

       3.清除画布上的矩形区域
        context.clearRect(40,40,10,10) //4个参数分别代表 清除的x坐标，y坐标，清除矩形部分的宽，高

       4.绘制圆
        
        context.beginPath() //开始绘图

        context.arc(380,380,150,0,2*Math.PI,false) //画一个外圆 参数为 圆心x，y，半径，起始角度，终点角度，是否按逆时针方向计算

        context.moveTo(490,380) // 由于最后一次画笔落在外圆的最右边，也就是，380+150=430  （530，380）处，因此，现在画笔放在内圆，计算半径差，得到（490，380）

        context.arc(380,380,110,0,2*Math.PI,false) //画一个内圆

        context.stroke() //描出路径

        注意：为什么画完一个圆，要moveto，因为你同一个画布对象使用的都是同一个画笔，画笔移动会留下痕迹，所以要移动到内圆，至于坐标
        需要根据你的圆心，半径和你的起止角度，也就是画笔最后的位置来定！！！实在分不清，画图计算！
````


````